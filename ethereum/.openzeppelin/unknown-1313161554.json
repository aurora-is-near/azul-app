{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x7362D7991CC324d2E35CB0cD4Ed95f124aD49895",
      "txHash": "0x419516af1c0003bd2cbdd33e5889c2077c176f18acb40db81dede775d8a8c09f",
      "kind": "uups"
    },
    {
      "address": "0xB7BAA2228b70E91C42EC99e9cFCD78A48Fdc9Cf2",
      "txHash": "0xfbf07ff41452e4a9a122001b9149011d1fd083a5fd338e1d1f8c9f3025b66924",
      "kind": "uups"
    },
    {
      "address": "0xC28Cab11C0D7b25ae70cD6Ed88D32af6797a077B",
      "txHash": "0xda558ace41f36a701f1b9faa463ea051f95bc0b5a3d0456caba48ffb7a654194",
      "kind": "uups"
    },
    {
      "address": "0x39BA1D47d19DFC179EE4e6d3028135601FA8C164",
      "txHash": "0x8e75fecbc69e3518c42b3cd4b8d40ff3f58f305bdcdf86599e3f8ddcfc015216",
      "kind": "uups"
    }
  ],
  "impls": {
    "af94acea1c0009810d9f21bd590dd03a2ae268a3e24c6bf7dd003a2eb97d3039": {
      "address": "0x450b732138E9db79019cb27C21827647bC390E63",
      "txHash": "0x033f1c47d9f20280e99a650f51027271ff9c8777686385e5d47d73e01a4622c6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "AzulNFT",
            "label": "reversePasscode",
            "type": "t_mapping(t_bytes32,t_struct(NFTData)2847_storage)",
            "src": "contracts/AzulNFT.sol:43"
          },
          {
            "contract": "AzulNFT",
            "label": "totalClaimed",
            "type": "t_uint256",
            "src": "contracts/AzulNFT.sol:45"
          },
          {
            "contract": "AzulNFT",
            "label": "editions",
            "type": "t_array(t_struct(EditionInfo)2854_storage)3_storage",
            "src": "contracts/AzulNFT.sol:47"
          },
          {
            "contract": "AzulNFT",
            "label": "tokenId2PasscodeHash",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "src": "contracts/AzulNFT.sol:49"
          },
          {
            "contract": "AzulNFT",
            "label": "aurora",
            "type": "t_contract(IERC20Upgradeable)768",
            "src": "contracts/AzulNFT.sol:51"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_struct(NFTData)2847_storage)": {
            "label": "mapping(bytes32 => struct AzulNFT.NFTData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(NFTData)2847_storage": {
            "label": "struct AzulNFT.NFTData",
            "members": [
              {
                "label": "exist",
                "type": "t_bool"
              },
              {
                "label": "claimed",
                "type": "t_bool"
              },
              {
                "label": "editionId",
                "type": "t_uint256"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "editionTokenId",
                "type": "t_uint256"
              },
              {
                "label": "airdropAmount",
                "type": "t_uint256"
              },
              {
                "label": "originalOwner",
                "type": "t_address"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_struct(EditionInfo)2854_storage)3_storage": {
            "label": "struct AzulNFT.EditionInfo[3]"
          },
          "t_struct(EditionInfo)2854_storage": {
            "label": "struct AzulNFT.EditionInfo",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "imageUri",
                "type": "t_string_storage"
              },
              {
                "label": "totalClaimed",
                "type": "t_uint256"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)"
          },
          "t_contract(IERC20Upgradeable)768": {
            "label": "contract IERC20Upgradeable"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "e6c826d574170a83647bb8351a0edbaf3d7967b32c60c526ada125adf20ad2fd": {
      "address": "0x3415D3920E0D3e69A0B5B379D4b0Ffde3A5e75ee",
      "txHash": "0x23990a16e8d2777649ed22cf0f474d09aff524c97dca58e3a4b6176a973e32c3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "AzulNFT",
            "label": "reversePasscode",
            "type": "t_mapping(t_bytes32,t_struct(NFTData)2847_storage)",
            "src": "contracts/AzulNFT.sol:43"
          },
          {
            "contract": "AzulNFT",
            "label": "totalClaimed",
            "type": "t_uint256",
            "src": "contracts/AzulNFT.sol:45"
          },
          {
            "contract": "AzulNFT",
            "label": "editions",
            "type": "t_array(t_struct(EditionInfo)2854_storage)3_storage",
            "src": "contracts/AzulNFT.sol:47"
          },
          {
            "contract": "AzulNFT",
            "label": "tokenId2PasscodeHash",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "src": "contracts/AzulNFT.sol:49"
          },
          {
            "contract": "AzulNFT",
            "label": "aurora",
            "type": "t_contract(IERC20Upgradeable)768",
            "src": "contracts/AzulNFT.sol:51"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_struct(NFTData)2847_storage)": {
            "label": "mapping(bytes32 => struct AzulNFT.NFTData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(NFTData)2847_storage": {
            "label": "struct AzulNFT.NFTData",
            "members": [
              {
                "label": "exist",
                "type": "t_bool"
              },
              {
                "label": "claimed",
                "type": "t_bool"
              },
              {
                "label": "editionId",
                "type": "t_uint256"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "editionTokenId",
                "type": "t_uint256"
              },
              {
                "label": "airdropAmount",
                "type": "t_uint256"
              },
              {
                "label": "originalOwner",
                "type": "t_address"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_struct(EditionInfo)2854_storage)3_storage": {
            "label": "struct AzulNFT.EditionInfo[3]"
          },
          "t_struct(EditionInfo)2854_storage": {
            "label": "struct AzulNFT.EditionInfo",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "imageUri",
                "type": "t_string_storage"
              },
              {
                "label": "totalClaimed",
                "type": "t_uint256"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)"
          },
          "t_contract(IERC20Upgradeable)768": {
            "label": "contract IERC20Upgradeable"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    }
  }
}
