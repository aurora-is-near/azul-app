/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides, Signer, utils } from "ethers";
import type { V1, V1Interface } from "../V1";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "__version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "passcode",
        type: "string",
      },
    ],
    name: "claim",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "aurora_",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "passcodeHash",
        type: "bytes32",
      },
    ],
    name: "rawDataFromPasscodeHash",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "exist",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "claimed",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "editionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "editionTokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "airdropAmount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "originalOwner",
            type: "address",
          },
        ],
        internalType: "struct AzulNFT.NFTData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "rawDataFromTokenId",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "exist",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "claimed",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "editionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "editionTokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "airdropAmount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "originalOwner",
            type: "address",
          },
        ],
        internalType: "struct AzulNFT.NFTData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "editionId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "imageUri",
        type: "string",
      },
    ],
    name: "setEditionMetadata",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "passcodesHashed",
        type: "bytes32[]",
      },
      {
        internalType: "uint256",
        name: "editionId",
        type: "uint256",
      },
    ],
    name: "uploadPasscodeBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523060601b60805234801561001757600080fd5b5060805160601c61332d61004b600039600081816108f701528181610937015281816109db0152610a1b015261332d6000f3fe6080604052600436106101475760003560e01c806301ffc9a71461014c57806306fdde0314610181578063081812fc146101a3578063095ea7b3146101d05780630c6d1f2a146101f257806318160ddd1461027057806323b872dd1461028f5780632f745c59146102af57806334325dab146102cf5780633659cfe6146102ef57806342842e0e1461030f578063451b4dda1461032f5780634f1ef286146103435780634f6ccce7146103565780636352211e146103765780636e9a7d0b1461039657806370a08231146103b6578063715018a6146103d65780638da5cb5b146103eb57806395d89b4114610400578063a22cb46514610415578063b27f82f014610435578063b88d4fde14610455578063c4d66de814610475578063c87b56dd14610495578063e985e9c5146104b5578063f2fde38b146104d5578063f3fe12c9146104f5575b600080fd5b34801561015857600080fd5b5061016c610167366004612ca1565b610515565b60405190151581526020015b60405180910390f35b34801561018d57600080fd5b50610196610540565b6040516101789190612ed5565b3480156101af57600080fd5b506101c36101be366004612c6f565b6105d2565b6040516101789190612e84565b3480156101dc57600080fd5b506101f06101eb366004612b91565b61065f565b005b3480156101fe57600080fd5b5061021261020d366004612c6f565b610770565b604051610178919081511515815260208083015115159082015260408083015190820152606080830151908201526080808301519082015260a0808301519082015260c0918201516001600160a01b03169181019190915260e00190565b34801561027c57600080fd5b506099545b604051908152602001610178565b34801561029b57600080fd5b506101f06102aa366004612a68565b610791565b3480156102bb57600080fd5b506102816102ca366004612b91565b6107c2565b3480156102db57600080fd5b506101f06102ea366004612d0f565b610858565b3480156102fb57600080fd5b506101f061030a366004612a12565b6108ec565b34801561031b57600080fd5b506101f061032a366004612a68565b6109b5565b34801561033b57600080fd5b506001610281565b6101f0610351366004612b42565b6109d0565b34801561036257600080fd5b50610281610371366004612c6f565b610a8a565b34801561038257600080fd5b506101c3610391366004612c6f565b610b1d565b3480156103a257600080fd5b506101f06103b1366004612bbd565b610b94565b3480156103c257600080fd5b506102816103d1366004612a12565b610cba565b3480156103e257600080fd5b506101f0610d41565b3480156103f757600080fd5b506101c3610d7c565b34801561040c57600080fd5b50610196610d8c565b34801561042157600080fd5b506101f0610430366004612b14565b610d9b565b34801561044157600080fd5b50610212610450366004612c6f565b610da6565b34801561046157600080fd5b506101f0610470366004612aa9565b610e26565b34801561048157600080fd5b506101f0610490366004612a12565b610e58565b3480156104a157600080fd5b506101966104b0366004612c6f565b610f37565b3480156104c157600080fd5b5061016c6104d0366004612a2f565b611214565b3480156104e157600080fd5b506101f06104f0366004612a12565b611242565b34801561050157600080fd5b50610281610510366004612cdb565b6112df565b60006001600160e01b0319821663780e9d6360e01b148061053a575061053a8261172a565b92915050565b60606065805461054f90613121565b80601f016020809104026020016040519081016040528092919081815260200182805461057b90613121565b80156105c85780601f1061059d576101008083540402835291602001916105c8565b820191906000526020600020905b8154815290600101906020018083116105ab57829003601f168201915b5050505050905090565b60006105dd8261177a565b6106435760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152606960205260409020546001600160a01b031690565b600061066a82610b1d565b9050806001600160a01b0316836001600160a01b031614156106d85760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161063a565b336001600160a01b03821614806106f457506106f48133611214565b6107615760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776044820152771b995c881b9bdc88185c1c1c9bdd995908199bdc88185b1b60421b606482015260840161063a565b61076b8383611797565b505050565b6107786128c0565b600082815261016a602052604090205461053a90610da6565b61079b3382611805565b6107b75760405162461bcd60e51b815260040161063a90613031565b61076b8383836118cf565b60006107cd83610cba565b821061082f5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b606482015260840161063a565b506001600160a01b03919091166000908152609760209081526040808320938352929052205490565b33610861610d7c565b6001600160a01b0316146108875760405162461bcd60e51b815260040161063a90612ffc565b81610161846003811061089c5761089c6131cd565b6003020160000190805190602001906108b692919061290a565b508061016184600381106108cc576108cc6131cd565b6003020160010190805190602001906108e692919061290a565b50505050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156109355760405162461bcd60e51b815260040161063a90612f3a565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610967611a68565b6001600160a01b03161461098d5760405162461bcd60e51b815260040161063a90612f74565b61099681611a84565b604080516000808252602082019092526109b291839190611ab3565b50565b61076b83838360405180602001604052806000815250610e26565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161415610a195760405162461bcd60e51b815260040161063a90612f3a565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610a4b611a68565b6001600160a01b031614610a715760405162461bcd60e51b815260040161063a90612f74565b610a7a82611a84565b610a8682826001611ab3565b5050565b6000610a9560995490565b8210610af85760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b606482015260840161063a565b60998281548110610b0b57610b0b6131cd565b90600052602060002001549050919050565b6000818152606760205260408120546001600160a01b03168061053a5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b606482015260840161063a565b33610b9d610d7c565b6001600160a01b031614610bc35760405162461bcd60e51b815260040161063a90612ffc565b60038110610bd057600080fd5b60005b825181101561076b576000838281518110610bf057610bf06131cd565b6020908102919091018101516040805160e081018252600180825260008286018181528385018a8152606085018381526080860184815260a0870185815260c0880186815299865261015f909a529690932094518554925161ffff1990931690151561ff00191617610100921515929092029190911784555191830191909155516002820155905160038201559151600483015551600590910180546001600160a01b0319166001600160a01b039092169190911790555080610cb28161315c565b915050610bd3565b60006001600160a01b038216610d255760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b606482015260840161063a565b506001600160a01b031660009081526068602052604090205490565b33610d4a610d7c565b6001600160a01b031614610d705760405162461bcd60e51b815260040161063a90612ffc565b610d7a6000611bfa565b565b61012d546001600160a01b031690565b60606066805461054f90613121565b610a86338383611c4d565b610dae6128c0565b50600090815261015f6020908152604091829020825160e081018452815460ff80821615158352610100909104161515928101929092526001810154928201929092526002820154606082015260038201546080820152600482015460a08201526005909101546001600160a01b031660c082015290565b610e303383611805565b610e4c5760405162461bcd60e51b815260040161063a90613031565b6108e684848484611d18565b600054610100900460ff1680610e71575060005460ff16155b610e8d5760405162461bcd60e51b815260040161063a90612fae565b600054610100900460ff16158015610eaf576000805461ffff19166101011790555b61016b80546001600160a01b0319166001600160a01b038416179055604080518082018252600480825263105e9d5b60e21b6020808401919091528351808501909452908352631056955360e21b90830152610f0a91611d4b565b610f12611dd2565b610f1a611e55565b610f22611eb3565b8015610a86576000805461ff00191690555050565b6060610f428261177a565b610fa65760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b606482015260840161063a565b6000610fb183610770565b90506000610161826040015160038110610fcd57610fcd6131cd565b60030201604051806060016040529081600082018054610fec90613121565b80601f016020809104026020016040519081016040528092919081815260200182805461101890613121565b80156110655780601f1061103a57610100808354040283529160200191611065565b820191906000526020600020905b81548152906001019060200180831161104857829003601f168201915b5050505050815260200160018201805461107e90613121565b80601f01602080910402602001604051908101604052809291908181526020018280546110aa90613121565b80156110f75780601f106110cc576101008083540402835291602001916110f7565b820191906000526020600020905b8154815290600101906020018083116110da57829003601f168201915b5050505050815260200160028201548152505090506040518060600160405280603e81526020016132ba603e91396111328360600151611f1a565b6040518060400160405280601b81526020017a129919161299193232b9b1b934b83a34b7b71299191299a092991960291b81525083600001516040518060400160405280600b81526020016a01022b234ba34b7b71016960ad1b81525061119c8760800151611f1a565b60408051808201825260158152741299191612991934b6b0b3b29299191299a092991960591b60208083019190915289810151835180850185526006815265094c8c894dd160d21b8184015293516111fc9a999897969594919201612dc3565b60405160208183030381529060405292505050919050565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b3361124b610d7c565b6001600160a01b0316146112715760405162461bcd60e51b815260040161063a90612ffc565b6001600160a01b0381166112d65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161063a565b6109b281611bfa565b600080826040516020016112f39190612da7565b604051602081830303815290604052905060006002826040516113169190612da7565b602060405180830381855afa158015611333573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906113569190612c88565b600081815261015f6020908152604091829020825160e081018452815460ff8082161515808452610100909204161515938201939093526001820154938101939093526002810154606084015260038101546080840152600481015460a0840152600501546001600160a01b031660c08301529192509061140c5760405162461bcd60e51b815260206004820152601060248201526f496e76616c69642070617373636f646560801b604482015260640161063a565b80602001511561145e5760405162461bcd60e51b815260206004820152601d60248201527f4e465420636c61696d656420666f7220746869732070617373636f6465000000604482015260640161063a565b6001602082015260408101516000906101619060038110611481576114816131cd565b600302016040518060600160405290816000820180546114a090613121565b80601f01602080910402602001604051908101604052809291908181526020018280546114cc90613121565b80156115195780601f106114ee57610100808354040283529160200191611519565b820191906000526020600020905b8154815290600101906020018083116114fc57829003601f168201915b5050505050815260200160018201805461153290613121565b80601f016020809104026020016040519081016040528092919081815260200182805461155e90613121565b80156115ab5780601f10611580576101008083540402835291602001916115ab565b820191906000526020600020905b81548152906001019060200180831161158e57829003601f168201915b505050505081526020016002820154815250509050600161016060008282546115d491906130b2565b9091555050610160546060830152604081018051600191906115f79083906130b2565b90525060408181015160808401908152600060a085018181523360c0870190815287835261015f602090815285842088518154928a015161ffff1990931690151561ff001916176101009215159290920291909117815594870151600186018190556060880151600287015593516003808701919091559151600486015551600590940180546001600160a01b0319166001600160a01b03909516949094179093559183916101619181106116ae576116ae6131cd565b6003020160008201518160000190805190602001906116ce92919061290a565b5060208281015180516116e7926001850192019061290a565b506040918201516002909101556060840151600090815261016a6020522084905561171c6117123390565b8460600151612095565b505060600151949350505050565b60006001600160e01b031982166380ac58cd60e01b148061175b57506001600160e01b03198216635b5e139f60e01b145b8061053a57506301ffc9a760e01b6001600160e01b031983161461053a565b6000908152606760205260409020546001600160a01b0316151590565b600081815260696020526040902080546001600160a01b0319166001600160a01b03841690811790915581906117cc82610b1d565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006118108261177a565b6118715760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161063a565b600061187c83610b1d565b9050806001600160a01b0316846001600160a01b031614806118b75750836001600160a01b03166118ac846105d2565b6001600160a01b0316145b806118c757506118c78185611214565b949350505050565b826001600160a01b03166118e282610b1d565b6001600160a01b03161461194a5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b606482015260840161063a565b6001600160a01b0382166119ac5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161063a565b6119b78383836120af565b6119c2600082611797565b6001600160a01b03831660009081526068602052604081208054600192906119eb9084906130de565b90915550506001600160a01b0382166000908152606860205260408120805460019290611a199084906130b2565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b03868116918217909255915184939187169160008051602061329a83398151915291a4505050565b600080516020613253833981519152546001600160a01b031690565b33611a8d610d7c565b6001600160a01b0316146109b25760405162461bcd60e51b815260040161063a90612ffc565b6000611abd611a68565b9050611ac884612167565b600083511180611ad55750815b15611ae657611ae484846121fa565b505b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143805460ff16611bf357805460ff19166001178155604051611b61908690611b32908590602401612e84565b60408051601f198184030181529190526020810180516001600160e01b0316631b2ce7f360e11b1790526121fa565b50805460ff19168155611b72611a68565b6001600160a01b0316826001600160a01b031614611bea5760405162461bcd60e51b815260206004820152602f60248201527f45524331393637557067726164653a207570677261646520627265616b73206660448201526e75727468657220757067726164657360881b606482015260840161063a565b611bf3856122e5565b5050505050565b61012d80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b03161415611cab5760405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b604482015260640161063a565b6001600160a01b038381166000818152606a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611d238484846118cf565b611d2f84848484612325565b6108e65760405162461bcd60e51b815260040161063a90612ee8565b600054610100900460ff1680611d64575060005460ff16155b611d805760405162461bcd60e51b815260040161063a90612fae565b600054610100900460ff16158015611da2576000805461ffff19166101011790555b611daa612432565b611db2612432565b611dbc838361249c565b801561076b576000805461ff0019169055505050565b600054610100900460ff1680611deb575060005460ff16155b611e075760405162461bcd60e51b815260040161063a90612fae565b600054610100900460ff16158015611e29576000805461ffff19166101011790555b611e31612432565b611e39612432565b611e41612432565b80156109b2576000805461ff001916905550565b600054610100900460ff1680611e6e575060005460ff16155b611e8a5760405162461bcd60e51b815260040161063a90612fae565b600054610100900460ff16158015611e31576000805461ffff1916610101179055611e39612432565b600054610100900460ff1680611ecc575060005460ff16155b611ee85760405162461bcd60e51b815260040161063a90612fae565b600054610100900460ff16158015611f0a576000805461ffff19166101011790555b611f12612432565b611e41612531565b606081611f3e5750506040805180820190915260018152600360fc1b602082015290565b60408051606480825260a0820190925260009160208201818036833701905050905060005b8315611fcd576000611f76600a86613177565b9050611f83600a866130ca565b9450611f908160306130b2565b60f81b8383611f9e8161315c565b945081518110611fb057611fb06131cd565b60200101906001600160f81b031916908160001a90535050611f63565b6000816001600160401b03811115611fe757611fe76131e3565b6040519080825280601f01601f191660200182016040528015612011576020820181803683370190505b50905060005b8281101561208c5783600161202c83866130de565b61203691906130de565b81518110612046576120466131cd565b602001015160f81c60f81b828281518110612063576120636131cd565b60200101906001600160f81b031916908160001a905350806120848161315c565b915050612017565b50949350505050565b610a86828260405180602001604052806000815250612591565b6001600160a01b03831661210a5761210581609980546000838152609a60205260408120829055600182018355919091527f72a152ddfb8e864297c917af52ea6c1c68aead0fee1a62673fcc7e0c94979d000155565b61212d565b816001600160a01b0316836001600160a01b03161461212d5761212d83826125c4565b6001600160a01b0382166121445761076b81612661565b826001600160a01b0316826001600160a01b03161461076b5761076b8282612710565b803b6121cb5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840161063a565b60008051602061325383398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060823b6122595760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161063a565b600080846001600160a01b0316846040516122749190612da7565b600060405180830381855af49150503d80600081146122af576040519150601f19603f3d011682016040523d82523d6000602084013e6122b4565b606091505b50915091506122dc828260405180606001604052806027815260200161327360279139612754565b95945050505050565b6122ee81612167565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60006001600160a01b0384163b1561242757604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290612369903390899088908890600401612e98565b602060405180830381600087803b15801561238357600080fd5b505af19250505080156123b3575060408051601f3d908101601f191682019092526123b091810190612cbe565b60015b61240d573d8080156123e1576040519150601f19603f3d011682016040523d82523d6000602084013e6123e6565b606091505b5080516124055760405162461bcd60e51b815260040161063a90612ee8565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506118c7565b506001949350505050565b600054610100900460ff168061244b575060005460ff16155b6124675760405162461bcd60e51b815260040161063a90612fae565b600054610100900460ff16158015611e41576000805461ffff191661010117905580156109b2576000805461ff001916905550565b600054610100900460ff16806124b5575060005460ff16155b6124d15760405162461bcd60e51b815260040161063a90612fae565b600054610100900460ff161580156124f3576000805461ffff19166101011790555b825161250690606590602086019061290a565b50815161251a90606690602085019061290a565b50801561076b576000805461ff0019169055505050565b600054610100900460ff168061254a575060005460ff16155b6125665760405162461bcd60e51b815260040161063a90612fae565b600054610100900460ff16158015612588576000805461ffff19166101011790555b611e4133611bfa565b61259b8383612794565b6125a86000848484612325565b61076b5760405162461bcd60e51b815260040161063a90612ee8565b600060016125d184610cba565b6125db91906130de565b60008381526098602052604090205490915080821461262e576001600160a01b03841660009081526097602090815260408083208584528252808320548484528184208190558352609890915290208190555b5060009182526098602090815260408084208490556001600160a01b039094168352609781528383209183525290812055565b609954600090612673906001906130de565b6000838152609a60205260408120546099805493945090928490811061269b5761269b6131cd565b9060005260206000200154905080609983815481106126bc576126bc6131cd565b6000918252602080832090910192909255828152609a909152604080822084905585825281205560998054806126f4576126f46131b7565b6001900381819060005260206000200160009055905550505050565b600061271b83610cba565b6001600160a01b039093166000908152609760209081526040808320868452825280832085905593825260989052919091209190915550565b6060831561276357508161278d565b8251156127735782518084602001fd5b8160405162461bcd60e51b815260040161063a9190612ed5565b9392505050565b6001600160a01b0382166127ea5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161063a565b6127f38161177a565b1561283f5760405162461bcd60e51b815260206004820152601c60248201527b115490cdcc8c4e881d1bdad95b88185b1c9958591e481b5a5b9d195960221b604482015260640161063a565b61284b600083836120af565b6001600160a01b03821660009081526068602052604081208054600192906128749084906130b2565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b038616908117909155905183929060008051602061329a833981519152908290a45050565b6040518060e001604052806000151581526020016000151581526020016000815260200160008152602001600081526020016000815260200160006001600160a01b031681525090565b82805461291690613121565b90600052602060002090601f016020900481019282612938576000855561297e565b82601f1061295157805160ff191683800117855561297e565b8280016001018555821561297e579182015b8281111561297e578251825591602001919060010190612963565b5061298a92915061298e565b5090565b5b8082111561298a576000815560010161298f565b600082601f8301126129b457600080fd5b81356001600160401b038111156129cd576129cd6131e3565b6129e0601f8201601f1916602001613082565b8181528460208386010111156129f557600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215612a2457600080fd5b813561278d816131f9565b60008060408385031215612a4257600080fd5b8235612a4d816131f9565b91506020830135612a5d816131f9565b809150509250929050565b600080600060608486031215612a7d57600080fd5b8335612a88816131f9565b92506020840135612a98816131f9565b929592945050506040919091013590565b60008060008060808587031215612abf57600080fd5b8435612aca816131f9565b93506020850135612ada816131f9565b92506040850135915060608501356001600160401b03811115612afc57600080fd5b612b08878288016129a3565b91505092959194509250565b60008060408385031215612b2757600080fd5b8235612b32816131f9565b91506020830135612a5d8161320e565b60008060408385031215612b5557600080fd5b8235612b60816131f9565b915060208301356001600160401b03811115612b7b57600080fd5b612b87858286016129a3565b9150509250929050565b60008060408385031215612ba457600080fd5b8235612baf816131f9565b946020939093013593505050565b60008060408385031215612bd057600080fd5b82356001600160401b0380821115612be757600080fd5b818501915085601f830112612bfb57600080fd5b8135602082821115612c0f57612c0f6131e3565b8160051b9250612c20818401613082565b8281528181019085830185870184018b1015612c3b57600080fd5b600096505b84871015612c5e578035835260019690960195918301918301612c40565b509997909101359750505050505050565b600060208284031215612c8157600080fd5b5035919050565b600060208284031215612c9a57600080fd5b5051919050565b600060208284031215612cb357600080fd5b813561278d8161321c565b600060208284031215612cd057600080fd5b815161278d8161321c565b600060208284031215612ced57600080fd5b81356001600160401b03811115612d0357600080fd5b6118c7848285016129a3565b600080600060608486031215612d2457600080fd5b8335925060208401356001600160401b0380821115612d4257600080fd5b612d4e878388016129a3565b93506040860135915080821115612d6457600080fd5b50612d71868287016129a3565b9150509250925092565b60008151808452612d938160208601602086016130f5565b601f01601f19169290920160200192915050565b60008251612db98184602087016130f5565b9190910192915050565b60008a51612dd5818460208f016130f5565b8a51612de78183860160208f016130f5565b8a519184010190612dfc818360208e016130f5565b8951612e0e8183850160208e016130f5565b8951929091010190612e24818360208c016130f5565b8751612e368183850160208c016130f5565b8751929091010190612e4c818360208a016130f5565b8551612e5e8183850160208a016130f5565b8551929091010190612e748183602088016130f5565b019b9a5050505050505050505050565b6001600160a01b0391909116815260200190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612ecb90830184612d7b565b9695505050505050565b60208152600061278d6020830184612d7b565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6020808252602c9082015260008051602061323383398151915260408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c9082015260008051602061323383398151915260408201526b6163746976652070726f787960a01b606082015260800190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b604051601f8201601f191681016001600160401b03811182821017156130aa576130aa6131e3565b604052919050565b600082198211156130c5576130c561318b565b500190565b6000826130d9576130d96131a1565b500490565b6000828210156130f0576130f061318b565b500390565b60005b838110156131105781810151838201526020016130f8565b838111156108e65750506000910152565b600181811c9082168061313557607f821691505b6020821081141561315657634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156131705761317061318b565b5060010190565b600082613186576131866131a1565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146109b257600080fd5b80151581146109b257600080fd5b6001600160e01b0319811681146109b257600080fdfe46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef646174613a6170706c69636174696f6e2f6a736f6e3b636861727365743d5554462d382c2537422532326e616d65253232253341253232415a554c202d20a2646970667358221220b2a86a11a4ac20762bc8f88ff2241b740230aae30c430c7edff16ef63360930a64736f6c63430008070033";

type V1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: V1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class V1__factory extends ContractFactory {
  constructor(...args: V1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<V1> {
    return super.deploy(overrides || {}) as Promise<V1>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): V1 {
    return super.attach(address) as V1;
  }
  connect(signer: Signer): V1__factory {
    return super.connect(signer) as V1__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): V1Interface {
    return new utils.Interface(_abi) as V1Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): V1 {
    return new Contract(address, _abi, signerOrProvider) as V1;
  }
}
